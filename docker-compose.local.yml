version: '3'

networks:
  local-dev-network:
    driver: bridge

services:

  #PHP Service
  laravel-api:
    build:
      context: .
      dockerfile: config/Docker/Dockerfile.php
    container_name: laravel-api
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel-api
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./source/laravel-api:/var/www
      - ./source/laravel-api/app:/var/www/app
      - ./source/laravel-api/bootstrap:/var/www/bootstrap
      - ./source/laravel-api/composer.lock:/var/www/composer.lock
      - ./source/laravel-api/database:/var/www/database
      - ./source/laravel-api/phpunit.xml:/var/www/phpunit.xml
      - ./source/laravel-api/routes:/var/www/routes
      - ./source/laravel-api/tests:/var/www/tests
      - ./source/laravel-api/vite.config.js:/var/www/vite.config.js
      - ./source/laravel-api/artisan:/var/www/artisan
      - ./source/laravel-api/composer.json:/var/www/composer.json
      - ./source/laravel-api/config:/var/www/config
      - ./source/laravel-api/package.json:/var/www/package.json
      - ./source/laravel-api/public:/var/www/public
      - ./source/laravel-api/resources:/var/www/resources
      - ./source/laravel-api/storage:/var/www/storage

      - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      # - /path/to/source/laravel-api/vendor:/var/www/vendor # Remove this line if you want to include vendor
      - ./config/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./config/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      # - ./config/php/php-fpm.ini:/usr/local/etc/php-fpm.d/www.conf # PHP-FPM config file
    depends_on:
      - mysql
    ports:
      - "${PHP_HOST_PORT}:${PHP_DOCKER_CONTAINER_PORT}"
    networks:
      - local-dev-network

  #Nginx Service
  nginx-webserver:
    image: nginx:alpine
    container_name: nginx-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - ./source/laravel-api:/var/www
      - ./config/nginxserver/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - laravel-api
      - mysql
    networks:
      - local-dev-network

  #MySQL Service
  mysql:
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    build:
      context: .
      dockerfile: config/Docker/Dockerfile.mysql
    environment:
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${DB_HOST_PORT}:${DB_DOCKER_CONTAINER_PORT}"
    volumes:
      - ./data/persistence:/var/lib/mysql
    networks:
      - local-dev-network

  # Mailhog
  mailhog:
    container_name: mailhog
    hostname: local.mailhog
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: unless-stopped
    networks:
      - local-dev-network
